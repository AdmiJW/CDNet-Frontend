/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as LogoutImport } from './routes/logout';
import { Route as LoginImport } from './routes/login';

// Create Virtual Routes

const UsersLazyImport = createFileRoute('/users')();
const AdminsLazyImport = createFileRoute('/admins')();
const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const UsersLazyRoute = UsersLazyImport.update({
    path: '/users',
    getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/users.lazy').then((d) => d.Route));

const AdminsLazyRoute = AdminsLazyImport.update({
    path: '/admins',
    getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admins.lazy').then((d) => d.Route));

const LogoutRoute = LogoutImport.update({
    path: '/logout',
    getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
    path: '/login',
    getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
    path: '/',
    getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
    interface FileRoutesByPath {
        '/': {
            id: '/';
            path: '/';
            fullPath: '/';
            preLoaderRoute: typeof IndexLazyImport;
            parentRoute: typeof rootRoute;
        };
        '/login': {
            id: '/login';
            path: '/login';
            fullPath: '/login';
            preLoaderRoute: typeof LoginImport;
            parentRoute: typeof rootRoute;
        };
        '/logout': {
            id: '/logout';
            path: '/logout';
            fullPath: '/logout';
            preLoaderRoute: typeof LogoutImport;
            parentRoute: typeof rootRoute;
        };
        '/admins': {
            id: '/admins';
            path: '/admins';
            fullPath: '/admins';
            preLoaderRoute: typeof AdminsLazyImport;
            parentRoute: typeof rootRoute;
        };
        '/users': {
            id: '/users';
            path: '/users';
            fullPath: '/users';
            preLoaderRoute: typeof UsersLazyImport;
            parentRoute: typeof rootRoute;
        };
    }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
    '/': typeof IndexLazyRoute;
    '/login': typeof LoginRoute;
    '/logout': typeof LogoutRoute;
    '/admins': typeof AdminsLazyRoute;
    '/users': typeof UsersLazyRoute;
}

export interface FileRoutesByTo {
    '/': typeof IndexLazyRoute;
    '/login': typeof LoginRoute;
    '/logout': typeof LogoutRoute;
    '/admins': typeof AdminsLazyRoute;
    '/users': typeof UsersLazyRoute;
}

export interface FileRoutesById {
    __root__: typeof rootRoute;
    '/': typeof IndexLazyRoute;
    '/login': typeof LoginRoute;
    '/logout': typeof LogoutRoute;
    '/admins': typeof AdminsLazyRoute;
    '/users': typeof UsersLazyRoute;
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath;
    fullPaths: '/' | '/login' | '/logout' | '/admins' | '/users';
    fileRoutesByTo: FileRoutesByTo;
    to: '/' | '/login' | '/logout' | '/admins' | '/users';
    id: '__root__' | '/' | '/login' | '/logout' | '/admins' | '/users';
    fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
    IndexLazyRoute: typeof IndexLazyRoute;
    LoginRoute: typeof LoginRoute;
    LogoutRoute: typeof LogoutRoute;
    AdminsLazyRoute: typeof AdminsLazyRoute;
    UsersLazyRoute: typeof UsersLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
    IndexLazyRoute: IndexLazyRoute,
    LoginRoute: LoginRoute,
    LogoutRoute: LogoutRoute,
    AdminsLazyRoute: AdminsLazyRoute,
    UsersLazyRoute: UsersLazyRoute,
};

export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/logout",
        "/admins",
        "/users"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/admins": {
      "filePath": "admins.lazy.tsx"
    },
    "/users": {
      "filePath": "users.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
